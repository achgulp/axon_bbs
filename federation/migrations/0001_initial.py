# Generated by Django 5.0.6 on 2025-10-02 22:25

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('messaging', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FederatedAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('ban_pubkey', 'Ban Pubkey'), ('unpin_content', 'Unpin Content'), ('update_profile', 'Update Profile'), ('DELETE_CONTENT', 'Delete Content')], max_length=50)),
                ('pubkey_target', models.TextField(blank=True, help_text='The pubkey targeted by the action (e.g., for a ban).', null=True)),
                ('content_hash_target', models.CharField(blank=True, help_text='The content_hash of the item being acted upon.', max_length=64, null=True)),
                ('action_details', models.JSONField(default=dict, help_text="Additional details, e.g., {'is_temporary': true, 'duration_hours': 72}")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('status', models.CharField(choices=[('approved', 'Approved'), ('pending_approval', 'Pending Approval'), ('denied', 'Denied')], default='approved', max_length=20)),
                ('is_logged', models.BooleanField(default=False, help_text='True if this action has been logged by the moderation agent.')),
            ],
        ),
        migrations.CreateModel(
            name='ModerationReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, help_text='Reason for the report.')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('is_logged', models.BooleanField(default=False, help_text="True if this report's outcome has been logged.")),
                ('report_type', models.CharField(choices=[('message_report', 'Message Report'), ('general_inquiry', 'General Inquiry')], default='message_report', max_length=20)),
                ('reported_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports', to='messaging.message')),
                ('reporting_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports_filed', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports_reviewed', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContentExtensionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_id', models.UUIDField()),
                ('content_type', models.CharField(max_length=50)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied')], default='pending', max_length=10)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_extensions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('content_id', 'user')},
            },
        ),
    ]
