Fortress Overlord - Product Requirements Document (PRD)
Version: 1.2
Game Type: Asynchronous, Persistent Real-Time Strategy (RTS) Applet

1. Overview & Core Concept
Fortress Overlord is a strategic programming game designed as an applet for the Axon BBS platform. Players build and manage an autonomous fortress, command a fleet of robotic Drones, and compete for resources and territory on a persistent, federated map.

The gameplay is pseudo-real-time. Players issue high-level commands, design AI scripts for their Drones, and then log off. A trusted, server-side Overlord Agent resolves actions (like battles and harvesting) that occur while the player is offline. Players log back in to review after-action reports and telemetry data to make their next strategic decisions.

2. The Core Gameplay Loop
Assess: Review event logs and sensor telemetry from the Command Center to understand what happened while offline.

Manage: Queue upgrades for buildings, research new technologies in the Barracks, and construct new Drone chassis and modules in the Factory.

Program: Create and edit AI scripts for Drone squads using a simple, trigger-based language.

Deploy: Assign scripts and high-level commands (e.g., ATTACK, HARVEST, PATROL) to Drone squads.

Await Results: Actions are posted to a public, encrypted game board and resolved by the Overlord Agent. The outcomes are discovered upon the player's next login.

3. Resources & Buildings
Gas: Harvested from Gas Geysers. Consumed by the Gas-Powered Plant to generate Energy.

Raw Ore: Mined from Ore Deposits.

Refined Metal: Produced by the Forge/Smelter from Raw Ore. Used for all construction and upgrades.

Data Fragments: Rare resource recovered from points of interest or combat wreckage. Used for advanced research.

Advanced Components (Tier 4):

Rocket Fuel: Refined from Gas in the Factory. Required for missile propulsion.

Explosive Warheads: Manufactured from Refined Metal in the Factory. Required for missile payloads.

Buildings: Command Center, Gas-Powered Plant, Forge/Smelter, Robot Factory, Barracks/R&D Lab, and four defensive Turrets. Each building has a distinct purpose and upgrade path.

4. The Drone & Player Interface
Single Chassis: All players start with the versatile Drone Chassis.

Modular Design: Drones are customized by equipping modules in a limited number of slots. Modules include weapons (Lasers, Missiles), defenses (Armor, Shields), harvesting tools (Drills, Extractors), and utility items (Scanners, Repair Arms).

Sensor Suite: Drones perceive the world through a multi-layered sensor system. Each sensor can be damaged and upgraded.

Gyro: Detects ground vibrations.

Camera: Short-range visual identification.

LIDAR: Active scanner for mapping and laser targeting.

Radar: Long-range detection of moving objects.

The Command Center Telemetry Interface: This is the player's primary view into the world. It is not a live feed but a replay of the last data packet received from a selected Drone. A visible timer will show the age of the data (e.g., "Data received: 2 minutes ago").

Unit Roster: A list of all Drones showing their status and health.

Sensor Feeds: By selecting a Drone, the player can switch between its sensor views:

Camera View: A 128x128 pixelated view of the Drone's line of sight. Will show static or glitches if damaged.

Vibration Analysis: A seismograph display showing the type and direction of ground vibrations.

LIDAR Map: A top-down wireframe of the immediate terrain and obstacles.

Radar Display: A sweeping radar screen showing moving contacts as blips.

5. The Tech Tree & Drone Specialization
All research is conducted in the Barracks/R&D Lab. Players spend Refined Metal and Data Fragments to unlock nodes.

Tier 1: Foundational Systems (Default Unlocks)

Chassis: Basic Drone Chassis

Modules: Basic Mining Drill, Gas Extractor, Repair Arm, Light Laser Turret

Scripting: MOVE_TO, MINE, REPAIR, RETURN_TO_BASE

Tier 2: Branching Paths

Path A: Industrial Logistics: Advanced Mining Drills, Expanded Cargo Bays.

Path B: Defensive Fortification: Reinforced Plating, Improved Turret AI.

Path C: Offensive Protocols: Weapon Hardpoints, ATTACK and PATROL script commands.

Tier 3: Specialization

Path A -> "Harvester" Drone: Geological Scanners, SCAN_FOR_RESOURCES script command.

Path B -> "Guardian" Drone: Aegis Shield Generator, GUARD_AREA script command.

Path C -> "Warrior" Drone: Pulse Cannon, PURSUE_ENEMY script command.

Tier 4: Endgame Technology

Unlocks (Requires Warrior Drone & Advanced Power Systems):

Missile Development: Allows construction of Missile Pod modules (requires Rocket Fuel and Warheads).

Guidance Systems: Unlocks the LIDAR Targeting Laser module, required to guide missiles.

Unlocks (Requires Guardian Drone & Advanced Power Systems):

Point-Defense Lasers: Defensive module to shoot down incoming missiles.

Countermeasures: Unlocks the Chaff Launcher utility module to decoy missiles.

6. The Overlord Agent & Federated Gameplay
Agent-as-a-User: A special, trusted user account (e.g., overlord_agent) can be created and flagged as an agent. This agent is a persistent background process that monitors game events.

Configurable Event Bus: The connection between an applet and its agent is defined in the admin panel. A SysOp will link an Applet to a specific Message Board, which will serve as that applet's "Event Bus." This allows the system to be flexible and support multiple, different agent-based games simultaneously without hard-coding board names.

Home Server Authority: To prevent race conditions, only the Overlord Agent on the defender's home server has the authority to process an attack. It reads the Action Post from the configured Event Bus, simulates the outcome, updates the AppletData for both players, and posts a signed "Result Post" back to the board.

Asynchronous PvP: All player-vs-player interaction is asynchronous. The delay between issuing a command and receiving the result is a core feature, dictated by travel times and synchronization latency.
