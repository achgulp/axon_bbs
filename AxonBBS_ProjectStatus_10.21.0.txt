Axon BBS - Project Status & Roadmap (Version 10.21.1)
Date: 2025-09-27

Version: 10.21.1 (In Progress)

This document summarizes the development progress, outlining completed tasks and the remaining work required to fulfill the project brief and architectural blueprint.

I. Completed Work
We have successfully addressed several critical bugs and completed all planned backend refactoring. The 

Unified Moderation Hub feature is now also complete and operational.  The application is in a stable, production-ready state.




Backend Refactoring (✅ Complete): The backend modularization is finished. All models, views, serializers, and services have been moved from the legacy 




core and api apps into their new feature-specific apps (accounts, messaging, applets, federation). The obsolete 



api app has been removed from the project. 


Unified Moderation Hub (✅ Complete): The new moderation system is fully implemented. It consolidates all moderation tasks into a single queue and allows users to submit general inquiries. The backend logic correctly handles all ticket types, including sending automated PM acknowledgments for user inquiries. 





II. Remaining Work
The remaining work consists of the implementation of the final major features defined in the project brief.

User-Managed Applets:


Goal: Allow users to upload and manage their own applets. 


Work Required:


Backend: Add owner and is_active fields to the Applet model and create API endpoints for upload and management. 



Frontend: Create a new "My Applets" view for users to manage their applets. 



Universal Embed Framework:


Goal: Allow any file type to be viewed directly within messages using dedicated, sandboxed applets. 


Work Required:


Backend: Ensure the Applet model's handles_mime_types field is utilized by the system. 



Frontend: Refactor the MessageList component to use a dynamic AttachmentRenderer that launches the correct applet based on MIME type. 


Browser History Integration:


Goal: Prevent the browser's back button from exiting the application by using a proper routing library. 


Work Required:


Frontend: Integrate the React Router library to manage navigation and browser history. 



