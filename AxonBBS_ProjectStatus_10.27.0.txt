Axon BBS - Project Status & Roadmap (Version 10.27.0)
Date: 2025-10-15

Version: 10.27.0 (Stable)

This document summarizes the development progress, outlining completed tasks and the remaining work required to fulfill the project brief and architectural blueprint.

I. Completed Work

Hybrid Applet Architecture (✅ Complete): Successfully implemented and deployed a hybrid architecture for large, complex applets like HexGL.
- Applet code (.js) and applet assets (.zip) are now handled as two separate, secure file attachments.
- The applet dynamically loads its assets from the BBS network at runtime, dramatically reducing initial load times and enabling much larger applications.

Secure & Backward-Compatible Applet Runner (✅ Complete): The AppletRunner component has been significantly hardened and improved.
- Integrity Verification: The AppletRunner now performs a client-side SHA-256 checksum on all applet code before execution. This guarantees that the code has not been corrupted or tampered with during download.
- Backward Compatibility: The AppletRunner is now "bilingual," able to correctly parse and run both the new file-based applet format (for HexGL) and the legacy applet format (for older, simpler applets), preventing regression bugs.
- Engaging Loading Screen: A themed loading animation with real-time status updates has been added to improve the user experience while applets are being downloaded and verified.

Backend Refactoring (✅ Complete): The backend modularization is finished. All models, views, serializers, and services have been moved into their new feature-specific apps.

Unified Moderation Hub (✅ Complete): The new moderation system is fully implemented.

Federated Chat Backend (Phase 1) (✅ Complete): The foundational backend for the AxonChat system is complete, including the ChatAgentService and the high-speed update_state API endpoint.

Dynamic Agent Loading (✅ Complete): The ServiceManager now dynamically loads and configures backend agents based on database entries, allowing for easier administration.

Automated Configuration Cloning (✅ Complete): A secure admin tool for bootstrapping new BBS instances from a trusted peer is implemented.

Applet Development Tooling (✅ Complete): Management commands streamline applet development and deployment.
- The post_applet_update command automates posting applet updates to the "Applet Library" board with proper BitSync manifests, creating FileAttachments with encrypted content, and updating applet code_manifest fields.
- The check_applet_manifest command provides diagnostic capabilities for troubleshooting applet manifests and federation issues.

II. Remaining Work / Roadmap

With the applet framework now robust and secure, the primary focus shifts to completing the Federated Chat feature.

Implement AxonChat Frontend (Phases 2 & 3):

Goal: Build the user-facing chat applet UI and the client-side logic for sending and receiving messages.

Work Required:

Frontend: Create the new AxonChat.js applet file with the UI for message history, user list, and input.

Frontend: Implement polling logic for the applet to efficiently check for and receive new messages from the shared state.

Implement AxonChat Federation (Phase 4):

Goal: Enable the ChatAgentService to synchronize chat room state across all federated BBS instances.

Work Required:

Backend: Add logic to the ChatAgentService to poll trusted peers for their chat state versions.

Backend: Implement state synchronization and merging logic to combine local and remote chat histories.

Implement User-Managed Applets:

Goal: Allow users to upload and manage their own applets.

Implement Universal Embed Framework:

Goal: Allow any file type to be viewed directly within messages using dedicated, sandboxed applets.

Integrate Browser History:

Goal: Prevent the browser's back button from exiting the application by using a proper routing library.
