# Generated by Django 5.0.6 on 2025-10-04 21:49

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('messaging', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Applet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The unique name of the applet.', max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('author_pubkey', models.TextField(blank=True, help_text="Public key of the applet's author.")),
                ('code_manifest', models.JSONField(help_text="BitSync manifest for the applet's code bundle.")),
                ('is_local', models.BooleanField(default=False, help_text="If checked, this applet's code will not be swarmed to peers.")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_debug_mode', models.BooleanField(default=False, help_text='Enable to show the debug console when this applet is run.')),
                ('handles_mime_types', models.CharField(blank=True, help_text='Comma-separated list of MIME types this applet can view (e.g., image/png,image/jpeg)', max_length=255)),
                ('parameters', models.JSONField(blank=True, default=dict, help_text='JSON object for applet-specific parameters (e.g., asset hashes).')),
                ('event_board', models.ForeignKey(blank=True, help_text='The message board this applet will use for its public events.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='messaging.messageboard')),
            ],
        ),
        migrations.CreateModel(
            name='AppletCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Applet Categories',
            },
        ),
        migrations.CreateModel(
            name='AppletSharedState',
            fields=[
                ('applet', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='shared_state', serialize=False, to='applets.applet')),
                ('state_data', models.JSONField(default=dict)),
                ('version', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='applet',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='applets.appletcategory'),
        ),
        migrations.CreateModel(
            name='AppletData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_manifest', models.JSONField(help_text="BitSync manifest for the user's applet data.")),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('applet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_instances', to='applets.applet')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applet_data', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('applet', 'owner')},
            },
        ),
        migrations.CreateModel(
            name='HighScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_pubkey', models.TextField(db_index=True)),
                ('owner_nickname', models.CharField(max_length=50)),
                ('score', models.IntegerField(db_index=True)),
                ('wins', models.IntegerField(blank=True, null=True)),
                ('losses', models.IntegerField(blank=True, null=True)),
                ('kills', models.IntegerField(blank=True, null=True)),
                ('deaths', models.IntegerField(blank=True, null=True)),
                ('assists', models.IntegerField(blank=True, null=True)),
                ('last_updated', models.DateTimeField()),
                ('applet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='high_scores', to='applets.applet')),
            ],
            options={
                'ordering': ['-score'],
                'unique_together': {('applet', 'owner_pubkey')},
            },
        ),
    ]
